{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAEKC,G,EAAK;AACf,4BAAIA,IAAIC,EAAR,EAAY;AACR,mCAAOD,GAAP;AACH,yBAFD,MAEO;AACH,kCAAM,IAAIE,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACH;AACJ;;;wCAEGC,G,EAAK;AAAA;;AAEL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;;AAIA;;;;;;;;;;;;;;;;AAgBH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;;AAOA;;;;;;;;;;;;;;;;;AAsBH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n    _handleErrors(res) {\n        if (res.ok) {\n            return res;\n        } else {\n            throw new Error(res.statusText);\n        }\n    }\n\n    get(url) {\n\n        return fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n\n        /* MÉTODO ANTIGO DE REQUISIÇÃO HTTP\n        return new Promise((resolve, reject) => {    \n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onreadystatechange = () => {\n                if(xhr.readyState == 4) {\n                    if(xhr.status == 200) {\n                        resolve(JSON.parse(xhr.responseText));  \n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send();\n        });\n        */\n    }\n\n    post(url, dado) {\n\n        return fetch(url, {\n            headers: { 'Content-type': 'application/json'},\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n\n        /* MÉTODO POST ANTIGO\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n\n                if (xhr.readyState == 4) {\n\n                    if (xhr.status == 200) {\n\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        });\n        */\n    }\n}"]}